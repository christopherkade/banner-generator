{"version":3,"sources":["components/GithubLink/GithubLink.js","components/Input/Input.js","components/InputWrapper/ContentInput/ContentInput.js","components/InputWrapper/ColorInput/ColorInput.js","components/InputWrapper/SizeInput/SizeInput.js","components/InputWrapper/InputWrapper.js","components/Output/Output.js","components/Buttons/Button/Button.js","components/Buttons/LinkButton/LinkButton.js","hooks/useInputs.js","components/BannerWrapper/BannerWrapper.js","App.js","index.js"],"names":["GithubLink","_ref","svgStyle","fill","color","position","top","border","right","react_default","a","createElement","href","className","aria-label","width","height","viewBox","style","aria-hidden","d","transformOrigin","Input","styled","input","_templateObject","InputBlock","div","ContentInput_templateObject","props","isRow","Label","label","_templateObject2","ContentInput","title","setTitle","Input_Input","value","onChange","e","target","Wrapper","ColorInput_templateObject","ColorInput_templateObject2","_templateObject3","ColorInput","bgColor","setBgColor","titleColor","setTitleColor","borderColor","setBorderColor","ColorInput_InputBlock","ColorInput_Label","lib","triangle","onChangeComplete","_ref2","hex","document","body","setProperty","handleBgColorChange","SizeInput_templateObject","SizeInput_templateObject2","SizeInput","titleSize","borderSize","setTitleSize","setBorderSize","Fragment","SizeInput_InputBlock","SizeInput_Label","type","min","InputWrapper_templateObject","Detail","details","InputWrapper_templateObject2","Summary","summary","InputWrapper_templateObject3","InputWrapper","values","setters","InputWrapper_Wrapper","open","InputWrapper_ContentInput_ContentInput","InputWrapper_ColorInput_ColorInput","InputWrapper_SizeInput_SizeInput","Output_templateObject","concat","Title","h1","Output_templateObject2","size","Output","Output_Wrapper","id","Button","button","Button_templateObject","LinkButton","LinkButton_templateObject","getRandomColor","Math","random","toString","useInputs","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","randomizeInputs","floor","BannerWrapper_templateObject","ActionWrapper","BannerWrapper_templateObject2","BannerWrapper","_useInputs","_useInputs2","imgURL","setImgURL","useEffect","output","getElementById","html2canvas","scale","then","canvas","toDataURL","components_GithubLink_GithubLink","BannerWrapper_Wrapper","components_Output_Output","components_InputWrapper_InputWrapper","Button_Button","onClick","LinkButton_LinkButton","download","App_templateObject","App","App_Wrapper","components_BannerWrapper_BannerWrapper","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.e1abb912.chunk.js","sourcesContent":["import React from \"react\"\n\nimport \"./GithubLink.css\"\n\nconst GithubLink = ({ color }) => {\n  const svgStyle = {\n    fill: color,\n    color: \"#fff\",\n    position: \"absolute\",\n    top: 0,\n    border: 0,\n    right: 0\n  }\n\n  const pathStyle = {\n    transformOrigin: \"130px 106px\",\n  }\n\n  return (\n    <a href=\"https://github.com/christopherkade/banner-generator\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n      <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={svgStyle} aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={pathStyle} className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg>\n    </a>\n  )\n}\n\nexport default GithubLink\n","import styled from \"styled-components\"\n\nconst Input = styled.input`\n  font-weight: 300;\n  font-size: 1rem;\n  padding: 0.3125rem;\n  border-radius: 4px;\n  border: 1px solid black;\n\n  &:focus {\n    outline: transparent;\n    border: 1px solid darkgrey;\n  }\n`\n\nexport default Input\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Input } from \"components/Input\"\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  justify-content: center;\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst Label = styled.label`\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n  font-size: 0.75rem;\n`\n\nconst ContentInput = ({ title, setTitle }) => {\n  return (\n    <InputBlock>\n      <Label>Title</Label>\n      <Input value={title} onChange={(e) => setTitle(e.target.value)} />\n    </InputBlock>\n  )\n}\n\nexport default ContentInput\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { CompactPicker } from \"react-color\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  justify-content: center;\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst Label = styled.label`\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n  font-size: 0.75rem;\n`\n\nconst ColorInput = ({ bgColor, setBgColor, titleColor, setTitleColor, borderColor, setBorderColor }) => {\n  const handleBgColorChange = ({ hex }) => {\n    setBgColor(hex)\n    document.body.style.setProperty('--border-color', hex)\n  }\n\n  return (\n    <Wrapper>\n      <InputBlock>\n        <Label>Background color</Label>\n        <CompactPicker\n          triangle=\"hide\"\n          color={bgColor}\n          onChangeComplete={(color) => handleBgColorChange(color)}\n        />\n      </InputBlock>\n      <InputBlock>\n        <Label>Title color</Label>\n        <CompactPicker\n          triangle=\"hide\"\n          color={titleColor}\n          onChangeComplete={(color) => setTitleColor(color.hex)}\n        />\n      </InputBlock>\n      <InputBlock>\n        <Label>Border color</Label>\n        <CompactPicker\n          triangle=\"hide\"\n          color={borderColor}\n          onChangeComplete={(color) => setBorderColor(color.hex)}\n        />\n      </InputBlock>\n    </Wrapper>\n  )\n}\n\nexport default ColorInput\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport { Input } from \"components/Input\"\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: ${ (props) => props.isRow ? \"row\" : \"column\"};\n  align-items: ${ (props) => props.isRow ? \"center\" : \"flex-start\"};\n  justify-content: center;\n  margin: 1rem;\n\n  @media (max-width: 769px) {\n    width: 100%;\n    align-items: center;\n  }\n`\n\nconst Label = styled.label`\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n  font-size: 0.75rem;\n`\n\nconst SizeInput = ({ titleSize, borderSize, setTitleSize, setBorderSize }) => {\n  return (\n    <>\n      <InputBlock>\n        <Label>Title size (in <code>rem</code>)</Label>\n        <Input value={titleSize} type=\"number\" min=\"1\" onChange={(e) => setTitleSize(e.target.value)} />\n      </InputBlock>\n      <InputBlock>\n        <Label>Border size (in <code>px</code>)</Label>\n        <Input value={borderSize} type=\"number\" min=\"0\" onChange={(e) => setBorderSize(e.target.value)} />\n      </InputBlock>\n    </>\n  )\n}\n\nexport default SizeInput\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport { ContentInput } from \"components/InputWrapper/ContentInput\"\nimport { ColorInput } from \"components/InputWrapper/ColorInput\"\nimport { SizeInput } from \"components/InputWrapper/SizeInput\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 1200px) {\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`\n\nconst Detail = styled.details`\n  margin-left: 1rem;\n`\n\nconst Summary = styled.summary`\n  text-align: left;\n  font-size: 2rem;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n`\n\nconst InputWrapper = ({ values, setters }) => {\n  const { bgColor, title, titleSize, titleColor, borderColor, borderSize } = values\n  const { setBgColor, setTitle, setTitleSize, setTitleColor, setBorderColor, setBorderSize } = setters\n\n  return (\n    <Wrapper>\n      <Detail open>\n        <Summary>Content</Summary>\n        <ContentInput title={title} setTitle={setTitle} />\n      </Detail>\n      <Detail>\n        <Summary>Colors</Summary>\n        <ColorInput\n          bgColor={bgColor} setBgColor={setBgColor}\n          titleColor={titleColor} setTitleColor={setTitleColor}\n          borderColor={borderColor} setBorderColor={setBorderColor}\n        />\n      </Detail>\n      <Detail>\n        <Summary>Sizes</Summary>\n        <SizeInput titleSize={titleSize} borderSize={borderSize} setTitleSize={setTitleSize} setBorderSize={setBorderSize} />\n      </Detail>\n    </Wrapper>\n  )\n}\n\nInputWrapper.propTypes = {\n  values: PropTypes.shape({\n    bgColor: PropTypes.string,\n    title: PropTypes.string,\n    titleSize: PropTypes.string,\n    titleColor: PropTypes.string,\n    borderColor: PropTypes.string,\n    hasBorder: PropTypes.bool\n  }).isRequired,\n  setters: PropTypes.shape({\n    setBgColor: PropTypes.func,\n    setTitle: PropTypes.func,\n    setTitleSize: PropTypes.func,\n    setTitleColor: PropTypes.func,\n    setBorderColor: PropTypes.func,\n    setHasBorder: PropTypes.func\n  }).isRequired\n}\n\n\nexport default InputWrapper\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  width: 1000px;\n  height: 420px;\n  background-color: ${(props) => props.bgColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.titleColor};\n  border: 1px solid #dbdbdb;\n  border: ${(props) => `${props.borderSize}px solid ${props.borderColor}`};\n  box-sizing: border-box;\n\n  @media (max-width: 1279px) {\n    width: auto;\n    height: auto;\n  }\n`\n\nconst Title = styled.h1`\n  font-weight: 300;\n  font-size: ${ (props) => props.size}rem;\n`\n\nconst Output = ({ values }) => {\n  const { bgColor, title, titleSize, titleColor, borderColor, borderSize } = values\n\n  return (\n    <Wrapper bgColor={bgColor} titleColor={titleColor} borderColor={borderColor} borderSize={borderSize} id=\"capture\">\n      <Title size={titleSize}>{title}</Title>\n    </Wrapper>\n  )\n}\n\nOutput.propTypes = {\n  values: PropTypes.shape({\n    bgColor: PropTypes.string,\n    title: PropTypes.string,\n    titleSize: PropTypes.string,\n    titleColor: PropTypes.string,\n    borderColor: PropTypes.string,\n    hasBorder: PropTypes.bool\n  }).isRequired\n}\n\nexport default Output\n","import styled from \"styled-components\"\n\nconst Button = styled.button`\n  padding: 0.1875rem 1rem;\n  background-color: #cfd7ff;\n  font-size: 1rem;\n  border: 0.125rem solid black;\n  border-radius: 0.1875rem;\n  margin: 0.5rem;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n`\n\nexport default Button\n","import styled from \"styled-components\"\n\nconst LinkButton = styled.a`\n  padding: 0.1875rem 1rem;\n  background-color: #66e2d5;\n  font-size: 1rem;\n  border: 0.125rem solid black;\n  border-radius: 0.1875rem;\n  margin: 0.5rem;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n\n  &:focus {\n    outline: transparent;\n  }\n`\n\nexport default LinkButton\n","import { useState } from \"react\"\n\nconst getRandomColor = () => {\n  return '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n}\n\n/**\n * Handles our input states & updates\n */\nconst useInputs = () => {\n  const [bgColor, setBgColor] = useState(\"#151513\")\n  const [title, setTitle] = useState(\"DEV banner generator 🎉\")\n  const [titleSize, setTitleSize] = useState(\"4\")\n  const [titleColor, setTitleColor] = useState(\"white\")\n  const [borderColor, setBorderColor] = useState(\"white\")\n  const [borderSize, setBorderSize] = useState(0)\n\n  // Updates both the bg color and the website's border colors\n  const randomBgColorChange = (color) => {\n    setBgColor(color)\n    document.body.style.setProperty('--border-color', color)\n  }\n\n  const randomizeInputs = () => {\n    randomBgColorChange(getRandomColor())\n    setTitleColor(getRandomColor())\n    setBorderSize(Math.floor(Math.random() * 11))\n    setBorderColor(getRandomColor())\n  }\n\n  return [\n    { bgColor, title, titleSize, titleColor, borderColor, borderSize },\n    { setBgColor, setTitle, setTitleSize, setTitleColor, setBorderColor, setBorderSize, randomizeInputs }\n  ]\n}\n\nexport default useInputs\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport html2canvas from \"html2canvas\"\n\nimport { GithubLink } from \"components/GithubLink\"\nimport { InputWrapper } from \"components/InputWrapper\"\nimport { Output } from \"components/Output\"\nimport { Button } from \"components/Buttons/Button\"\nimport { LinkButton } from \"components/Buttons/LinkButton\"\nimport useInputs from \"hooks/useInputs\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n\n  @media (max-width: 1279px) {\n    flex-direction: column;\n    justify-content: flex-end;\n    margin-bottom: 0;\n  }\n`\n\nconst ActionWrapper = styled.div`\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst BannerWrapper = () => {\n  const [values, setters] = useInputs()\n  const [imgURL, setImgURL] = useState(\"#\")\n\n  /**\n   * Called when the user updates the banner\n   * Renders the output as a canvas with html2canvas\n   * Transforms the canvas to a data URI, and save it for later download\n   */\n  useEffect(() => {\n    const output = document.getElementById(\"capture\")\n    html2canvas(output, {\n      width: 1000,\n      height: 420,\n      scale: 1\n    }).then(canvas => {\n      setImgURL(canvas.toDataURL('image/png'))\n    });\n  }, [values])\n\n  return (\n    <>\n      <GithubLink color={values.bgColor} />\n\n      <Wrapper>\n        <Output values={values} />\n        <ActionWrapper>\n          <InputWrapper values={values} setters={setters} />\n          <Button onClick={setters.randomizeInputs}>\n            RANDOMISE\n          </Button>\n          <LinkButton id=\"download-button\" download=\"banner.png\" href={imgURL}>\n            DOWNLOAD BANNER\n          </LinkButton>\n        </ActionWrapper>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default BannerWrapper\n","import React from 'react';\nimport styled from \"styled-components\"\n\nimport { BannerWrapper } from \"components/BannerWrapper\"\n\nconst Wrapper = styled.div`\n  text-align: center;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <BannerWrapper />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}